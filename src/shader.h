/* File generated with Shader Minifier 1.1.5
 * http://www.ctrl-alt-test.fr
 */
#ifndef SHADER_H_
# define SHADER_H_
# define VAR_COLOR "i"
# define VAR_PLAYFIELD "v"
# define VAR_SIZE "R"

const char *shader_glsl =
 "#version 450\n"
 "uniform vec2 R;"
 "uniform int v[216];"
 "out vec3 i;"
 "vec2 y=gl_FragCoord.xy/vec2(620)-vec2(.5,.3);"
 "vec3 n[10]={vec3(0),vec3(1,0,0),vec3(0,1,0),vec3(0,0,1),vec3(0,1,1),vec3(1,1,0),vec3(1,0,1),vec3(1.,.5,0),vec3(1),vec3(.5)};struct RR{vec3 RC;vec3 RP;bool RH;};"
 "vec4 t(vec3 v,vec3 R,float y,vec3 x)"
 "{"
   "vec3 f=abs(v)-R;"
   "return vec4(x,length(max(f,0.))+min(max(f.x,max(f.y,f.z)),0.)-y);"
 "}"
 "vec4 t(vec3 y)"
 "{"
   "vec2 f=floor(y.xy/.25)+6;"
   "f.y=-f.y+20;"
   "int R=v[int(f.y*12+f.x)];"
   "y.xy=mod(y.xy,.25)-.125;"
   "vec3 x;"
   "if(f.x<0||f.y<0||f.x>11||f.y>17)"
     "x=vec3(0);"
   "else"
     " x=n[R];"
   "return t(y,vec3(.1,.1,.01),.025,vec3(x));"
 "}"
 "RR x(vec3 v,vec3 y,float R,float x)"
 "{"
   "y=normalize(y);"
   "RR f;"
   "f.RP=v;"
   "f.RH=false;"
   "vec4 n;"
   "for(float i=0;i<R;)"
     "{"
       "n=t(f.RP);"
       "if(n.w<x)"
         "{"
           "f.RH=true;"
           "f.RC=n.xyz;"
           "break;"
         "}"
       "f.RP+=y*n.w;"
       "i+=n.w;"
     "}"
   "return f;"
 "}"
 "float f(vec3 v,vec3 y,vec3 f,float x)"
 "{"
   "return y=normalize(y),(dot(v,y)*.5+.5+pow(max(dot(f,reflect(y,v)),0),4)*.25)*x;"
 "}"
 "void main()"
 "{"
   "vec3 v=vec3(0,0,-3.2),R=vec3(y,1);"
   "RR n=x(v,R,6,.0001);"
   "i=n.RC;"
   "vec2 m=vec2(.005,0.);"
   "vec3 w=normalize(vec3(t(n.RP+m.xyy).w-t(n.RP-m.xyy).w,t(n.RP+m.yxy).w-t(n.RP-m.yxy).w,t(n.RP+m.yyx).w-t(n.RP-m.yyx).w));"
   "i*=f(w,n.RP-vec3(-10,-120,1),R,1.);"
 "}";

#endif // SHADER_H_
